function y(){}function k(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function M(){return Object.create(null)}function j(t){t.forEach(w)}function E(t){return typeof t=="function"}function A(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function B(t){return Object.keys(t).length===0}function O(t,...n){if(t==null){for(const o of n)o(void 0);return y}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function F(t,n,e){t.$$.on_destroy.push(O(n,e))}function P(t,n,e,o){if(t){const c=m(t,n,e,o);return t[0](c)}}function m(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function S(t,n,e,o){if(t[2]&&o){const c=t[2](o(e));if(n.dirty===void 0)return c;if(typeof c=="object"){const a=[],d=Math.max(n.dirty.length,c.length);for(let u=0;u<d;u+=1)a[u]=n.dirty[u]|c[u];return a}return n.dirty|c}return n.dirty}function U(t,n,e,o,c,a){if(c){const d=m(n,e,o,a);t.p(d,c)}}function D(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function G(t){return t??""}function H(t){return t&&E(t.destroy)?t.destroy:y}let i;function h(t){i=t}function f(){if(!i)throw new Error("Function called outside component initialization");return i}function I(t){f().$$.on_mount.push(t)}function J(t){f().$$.after_update.push(t)}function K(t,n){return f().$$.context.set(t,n),n}function L(t){return f().$$.context.get(t)}function N(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(o=>o.call(this,n))}const l=[],b=[];let s=[];const g=[],x=Promise.resolve();let p=!1;function q(){p||(p=!0,x.then(z))}function Q(){return q(),x}function v(t){s.push(t)}const _=new Set;let r=0;function z(){if(r!==0)return;const t=i;do{try{for(;r<l.length;){const n=l[r];r++,h(n),C(n.$$)}}catch(n){throw l.length=0,r=0,n}for(h(null),l.length=0,r=0;b.length;)b.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];_.has(e)||(_.add(e),e())}s.length=0}while(l.length);for(;g.length;)g.pop()();p=!1,_.clear(),h(t)}function C(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(v)}}function R(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{G as A,H as B,S as a,F as b,P as c,J as d,b as e,N as f,D as g,M as h,z as i,E as j,B as k,v as l,R as m,y as n,I as o,i as p,h as q,j as r,A as s,Q as t,U as u,w as v,l as w,q as x,K as y,L as z};
